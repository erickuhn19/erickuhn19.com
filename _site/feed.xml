<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-19T21:25:50-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">erickuhn19</title><subtitle>Product Management + Bitcoin</subtitle><entry><title type="html">Life Lessons Part 1</title><link href="http://localhost:4000/blog/2016/07/05/Life-Lessons-Part-1.html" rel="alternate" type="text/html" title="Life Lessons Part 1" /><published>2016-07-05T00:00:00-07:00</published><updated>2016-07-05T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/07/05/Life-Lessons-Part-1</id><content type="html" xml:base="http://localhost:4000/blog/2016/07/05/Life-Lessons-Part-1.html">&lt;p&gt;I’m beginning writing the lessons I have learned throughout my life for the possibility that I will not be able to teach these lessons to my son. This will also help me build a framework of lessons to teach him and not forget to do so! These lessons are in no particular order and I’ll hopefully write many more posts like this in the future.&lt;/p&gt;

&lt;h2 id=&quot;find-your-passions&quot;&gt;Find your passions:&lt;/h2&gt;

&lt;p&gt;This is your life and you need to spend time doing the things that make you curious, excited and get you out of bed everyday.&lt;/p&gt;

&lt;h2 id=&quot;read-books&quot;&gt;Read books:&lt;/h2&gt;

&lt;p&gt;Books give you a kind of depth that articles and videos can’t give you. Don’t underestimate the power of reading books.&lt;/p&gt;

&lt;h2 id=&quot;never-stop-learning&quot;&gt;Never stop learning:&lt;/h2&gt;

&lt;p&gt;School is just one step of your journey. The world is always changing. Technology is increasing at far greater pace than I could have imagined when writing this post. You need to keep learning to harness it.&lt;/p&gt;

&lt;h2 id=&quot;dont-take-summers-off-from-education&quot;&gt;Don’t take Summer’s off from education:&lt;/h2&gt;

&lt;p&gt;Taking summers off is one of the biggest mistakes I’ve made throughout my early life. Don’t rely on public education to build the knowledge you want. It’s also very hard to get started after 3 months of being off. Spend a portion of the summer for pursuing your passions with more time on your hands.&lt;/p&gt;

&lt;h2 id=&quot;never-stop-asking-questions&quot;&gt;Never stop asking questions:&lt;/h2&gt;

&lt;p&gt;Questioning the way things are makes people uncomfortable. You will win and loose at times, but never stop asking questions.&lt;/p&gt;

&lt;h2 id=&quot;build-daily-habits&quot;&gt;Build daily habits:&lt;/h2&gt;

&lt;p&gt;Habits compounded over time will exponentially increase success. 1.01^365 = 37.78 .99^365 = 0.02&lt;/p&gt;

&lt;h2 id=&quot;learn-how-to-type-correctly&quot;&gt;Learn how to type correctly:&lt;/h2&gt;

&lt;p&gt;You will severely regret it later if you don’t.&lt;/p&gt;

&lt;h2 id=&quot;keep-a-journal&quot;&gt;Keep a journal:&lt;/h2&gt;

&lt;p&gt;Reflect on choices your making and the future you seek. Plus your future self will laugh at the present you, no matter where you think you’re at in life. My future self is surely going to laugh at this blog post.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">I’m beginning writing the lessons I have learned throughout my life for the possibility that I will not be able to teach these lessons to my son. This will also help me build a framework of lessons to teach him and not forget to do so! These lessons are in no particular order and I’ll hopefully write many more posts like this in the future.</summary></entry><entry><title type="html">Photo Management Workflow</title><link href="http://localhost:4000/blog/2016/07/04/Photo-Management-Workflow.html" rel="alternate" type="text/html" title="Photo Management Workflow" /><published>2016-07-04T00:00:00-07:00</published><updated>2016-07-04T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/07/04/Photo-Management-Workflow</id><content type="html" xml:base="http://localhost:4000/blog/2016/07/04/Photo-Management-Workflow.html">&lt;p&gt;Happy Fourth of July!&lt;/p&gt;

&lt;p&gt;I’ve always taken photos on my iPhone but ever since my son was born my wife and I have put more emphasis on using our DSLR. I bought the Canon Mark II 7D for my wife but recently I’ve gotten really interested in learning more about photography and using a high quality camera. I still have much to learn about how to use the camera, photography in general and doing some light editing, but the first thing I needed to tackle was how to manage the large influx of non-iPhone photos.&lt;/p&gt;

&lt;p&gt;My current set up is a MacBook Air with 128gb hard drive with an external 1tb drive used for backups through TimeMachine. The problem is that 128gb drive, it’s almost filed up and I haven’t even started adding hundreds of photos or the massive RAW files. I forgot to mention I pay for the 50gb of iCloud backup and all photos from my wife and my iPhone’s are backed up to the Apple Cloud.&lt;/p&gt;

&lt;p&gt;The first thing I tried was taking all the photos and importing them into my Photos app which then gets backed up to iCloud and is accessible on any of my devices. The problem is when shooting with the DSLR you take a ton of throw a way photos with the idea you will edit and delete many later. Adding them all to my iCloud which then get sorted by date with all my other iPhone photography was not ideal. Especially since my wife and I are both using the camera and now I have a full photo shoot she did with her sister on my photo library. That is not going to work.&lt;/p&gt;

&lt;p&gt;While looking for other options I remembered seeing a blog post by &lt;a href=&quot;https://www.caseyliss.com/2016/5/29/photo-management&quot;&gt;Casey Liss&lt;/a&gt; about his photo management process, which got me thinking. I seriously considered using his script but know it would have taken me a while to customize it to fit my own needs. So I started to research options that I could get up and running quicker (I had a hundred new photos on the SD card waiting to be backed up after the iCloud debacle). &lt;a href=&quot;http://www.leancrew.com/all-this/2013/10/photo-management-via-the-finder/&quot;&gt;The article Casey Liss was inspired by&lt;/a&gt; mentioned a Mac app called &lt;a href=&quot;https://www.noodlesoft.com/&quot;&gt;Hazel&lt;/a&gt;. I downloaded the trial and set up a rule to move all photos from the SD card once inserted into the Mac to be moved into the external hard drive and create a folder for each date a picture was taken. It works like magic and when I pop in the SD card all the photos are instantly moved into the external drive and sorted by date with the file name being a date and then numbered in ascending order. The SD card is wiped clean, ready to take more photos. Looking forward to learning more about the power of Hazel, this [Mac Power User Podcast episode])https://www.relay.fm/mpu/322) is a good place to start.&lt;/p&gt;

&lt;p&gt;So now I have all my DSLR photos on my external hard drive but not being backed up anywhere else. Side note, it would be ideal if the photos were to be put on my Mac’s hard drive and then copied to the external but I’ll have to wait to add that in to my workflow once I buy a new MacBook Pro with a tb+ of SSD. I’ve heard a lot of great things about &lt;a href=&quot;https://www.backblaze.com/&quot;&gt;BackBlaze&lt;/a&gt; and have been meaning to have a second backup of all my data and this was perfect timing. I signed up for BackBlaze and fully prepared to pay past the trial. For $5 a month to know I have all my data backed up from my Mac and external drive is worth it.&lt;/p&gt;

&lt;p&gt;The last step of my photo management process takes place once I’ve edited a photo and decided I really want to see it more often. I’ll import into my Apple Photos app which will then be synced to iCloud and accessible on all my devices.&lt;/p&gt;

&lt;p&gt;A minimum of two backups (external hard drive and BackBlaze) and a maximum of four backups (Mac, external, BackBlaze and iCloud).&lt;/p&gt;

&lt;p&gt;This will certainly evolve over time. Look forward to sharing when it does.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">Happy Fourth of July!</summary></entry><entry><title type="html">App Store Changes</title><link href="http://localhost:4000/blog/2016/06/14/App-Store-Changes.html" rel="alternate" type="text/html" title="App Store Changes" /><published>2016-06-14T00:00:00-07:00</published><updated>2016-06-14T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/06/14/App-Store-Changes</id><content type="html" xml:base="http://localhost:4000/blog/2016/06/14/App-Store-Changes.html">&lt;p&gt;This post comes a little late as I wrote it last week and the WWDC keynote was today.&lt;/p&gt;

&lt;p&gt;Anyway! Ahead of WWDC, Phil Schiller broke news on changes to the app store with interviews to &lt;a href=&quot;http://www.theverge.com/2016/6/8/11880730/apple-app-store-subscription-update-phil-schiller-interview&quot;&gt;The Verge&lt;/a&gt; and &lt;a href=&quot;http://daringfireball.net/2016/06/the_new_app_store&quot;&gt;Daring Fireball&lt;/a&gt;. This move was quite interesting and after hearing the keynote I see why. Those two hours went by so fast! I’m glad the developer community had time to digest what this means for their business. So many awesome updates for from the keynote…for another post.&lt;/p&gt;

&lt;h2 id=&quot;app-review&quot;&gt;App Review&lt;/h2&gt;

&lt;p&gt;First, Apple is acknowledging that app review times have been drastically better over the last few weeks. I covered this an a earlier blog post and it’s great news that Apple is actually committing to doing this for the foreseeable future. This is hands down a win for developers.&lt;/p&gt;

&lt;h2 id=&quot;subscription-business-model&quot;&gt;Subscription Business Model&lt;/h2&gt;

&lt;p&gt;Subscription pricing is now open to all categories and after 12 months of paying for a subscription, the developer will now get 85% instead of 70%! It’s still a monumental task to have a user pay for 12+ months, but I’m glad to see Apple moving in this direction. Allowing developers to decide which business model fits for them is the right call, ultimately users will decide if they are willing to pay for a subscription if the app is continually providing value. and making the economics better. regardless what type of app it is.&lt;/p&gt;

&lt;p&gt;It will be interesting to see how this changes the economic landscape for indie developers. From a users perspective, what will the UX of paying for individual apps on a rolling basis be? There will be breaking point on how many subscription apps a person is willing to pay for. However, I think only a small number of apps will adopt this model and it will therefore have a net positive effect.&lt;/p&gt;

&lt;h2 id=&quot;ads-in-search&quot;&gt;Ads in Search&lt;/h2&gt;

&lt;p&gt;Apple seems to be adamant that Ads in Search will not become like other ad exchanges and will be tightly controlled so the tool won’t be abused. I tend to agree it will be done in a tasteful manner. Looking past the potential downfalls, this is a great opportunity for a new app to break into a category where they wouldn’t be close to the top of search.&lt;/p&gt;

&lt;p&gt;Looking forward to seeing if these changes help the app store economics for indie developers.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">This post comes a little late as I wrote it last week and the WWDC keynote was today.</summary></entry><entry><title type="html">Building a chat app with Firebase and Swift</title><link href="http://localhost:4000/blog/2016/05/31/Building-a-chat-app-with-Firebase-and-Swift.html" rel="alternate" type="text/html" title="Building a chat app with Firebase and Swift" /><published>2016-05-31T00:00:00-07:00</published><updated>2016-05-31T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/05/31/Building-a-chat-app-with-Firebase-and-Swift</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/31/Building-a-chat-app-with-Firebase-and-Swift.html">&lt;p&gt;So in my &lt;a href=&quot;http://erickuhn19.com/google-io-2016-thoughts/&quot;&gt;last post on Google I/O&lt;/a&gt; I mentioned I was going to explore Firebase and I’ve been doing just that. The Firebase team has great documentation on their site as well as some helpful tutorials. I completed the iOS building a messaging app with Swift. You can find the link &lt;a href=&quot;https://codelabs.developers.google.com/codelabs/firebase-ios-swift&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was very cool to see the power behind the SDK and how Firebase can augment so many backend things you would have to build into your API. I followed along but getting to understand all the functions is really where you can unlock Firebase’s true potential. I plan on doing this over the next few weeks.&lt;/p&gt;

&lt;p&gt;In the tutorial you learn how to set up the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sync data using the Firebase Realtime Database.&lt;/li&gt;
  &lt;li&gt;Manage Identity and Sign In with Firebase Authentication&lt;/li&gt;
  &lt;li&gt;Store and access files using Firebase Storage.&lt;/li&gt;
  &lt;li&gt;Configure an application with Firebase Remote Config.&lt;/li&gt;
  &lt;li&gt;Track application usage flows with Firebase Analytics.&lt;/li&gt;
  &lt;li&gt;Display ads with AdMob.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, there were a few issues with the documentation. Nothing a little stackoverflow/github googling couldn’t fix. Here are the fixes:&lt;/p&gt;

&lt;p&gt;Section 8: &lt;a href=&quot;http://stackoverflow.com/questions/37383187/error-in-firebase-ios-codelab-chat-app-tutorial&quot;&gt;stackoverflow link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Need to add to the Constants.Swift file&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swift static let imageUrl = &quot;imageUrl&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All looked good after that and then I caught this error when I complied.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FriendlyChatSwift[7097:353609] &lt;em&gt;** Assertion failure in -[UITableView _endCellAnimationsWithContext:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit_Sim/UIKit-3512.60.7/UITableView.m:1716 2016-05-28 16:38:42.950 FriendlyChatSwift[7097:353609] **&lt;/em&gt; Terminating app due to uncaught exception ‘NSInternalInconsistencyException’, reason: ‘Invalid update: invalid number of rows in section 0. The number of rows contained in an existing section after the update (1) must be equal to the number of rows contained in that section before the update (27), plus or minus the number of rows inserted or deleted from that section (1 inserted, 0 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the discussion on the &lt;a href=&quot;https://github.com/firebase/friendlychat/issues/25&quot;&gt;Firebase’s github page&lt;/a&gt; on the issue. The answer that ended up working for me came from this source on &lt;a href=&quot;http://stackoverflow.com/questions/37400316/image-upload-crash-in-firebase-codelabs-friendlychat-tutorial&quot;&gt;stackoverflow.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also found an error in step 10, use this in the viewDidLoad:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;swift self.remoteConfig = FIRRemoteConfig.remoteConfig()&lt;/code&gt;&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">So in my last post on Google I/O I mentioned I was going to explore Firebase and I’ve been doing just that. The Firebase team has great documentation on their site as well as some helpful tutorials. I completed the iOS building a messaging app with Swift. You can find the link here.</summary></entry><entry><title type="html">Google I/O 2016 thoughts</title><link href="http://localhost:4000/blog/2016/05/23/Google-IO-2016-thoughts.html" rel="alternate" type="text/html" title="Google I/O 2016 thoughts" /><published>2016-05-23T00:00:00-07:00</published><updated>2016-05-23T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/05/23/Google-IO-2016-thoughts</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/23/Google-IO-2016-thoughts.html">&lt;p&gt;This isn’t going to be a full write up of Google I/O 2016. There are many that do a great job of that, you can read &lt;a href=&quot;http://techcrunch.com/gallery/everything-you-need-to-know-from-the-2016-google-io-keynote/&quot;&gt;TechCrunch’s here&lt;/a&gt;, &lt;a href=&quot;http://www.theverge.com/2016/5/18/11701030/google-io-2016-keynote-highlights-announcements-recap&quot;&gt;The Verge here&lt;/a&gt;, and &lt;a href=&quot;http://thenextweb.com/google/2016/05/20/google-io-2016-recap-everything-need-know/#gref&quot;&gt;The Next Web here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m going to touch on the two things that I am really excited about. The first is Google Home. I’ve been excited about Amazon’s Echo but haven’t jumped in yet. I’ve read and seen examples where the Echo can be a really cool utility because of it’s always listening functionality. I air on the side of Siracusa here &lt;a href=&quot;http://atp.fm/episodes/170&quot;&gt;(listen to the ATP 170 to hear his thoughts)&lt;/a&gt; and think that the the full stack integrations with merchants isn’t there yet, so it won’t be able to do the things I really would like it to do. However, if I trust any company to do this really well, it’s Google. Google’s core competency is in big data processing and machine learning which is exactly what this product is meant for. I will 100% be a buyer of this product.&lt;/p&gt;

&lt;p&gt;If only my new Apple TV had the always listening functionality with enhanced microphones. Apple could have already had a horse in this race. Siri on iPhone and Apple Watch isn’t sufficient because the ‘hey siri’ is way too hit or miss.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://marco.org/2016/05/21/avoiding-blackberrys-fate&quot;&gt;Marco Arment writes up a great piece&lt;/a&gt; on his fear that Apple is not focusing enough on the machine learning/AI strategy, where its competitors already have an advantage. Let’s see if Apple opens up a Siri API at WWDC next month.&lt;/p&gt;

&lt;p&gt;The other Google IO announcement that is really exciting and I plan on diving in much deeper with, is &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firebase was purchased around 18 months ago and this is the &lt;a href=&quot;http://www.theverge.com/2016/5/18/11704050/google-firebase-baas-facebook-parse-google-io-2016&quot;&gt;first major addition to the platform.&lt;/a&gt; With &lt;a href=&quot;http://blog.parse.com/announcements/moving-on/&quot;&gt;Parse shutting down&lt;/a&gt; this is a welcome to the developer community that want to rely on back end as a service (BaaS) platforms. I am personally excited and already diving into the documentation to see how I could utilize this service in my next side project. The reason why it’s so intriguing? Google is building this platform to be multi channel: iOS, Android and Web. Back end services are one of those things Google does well and this update to Firebase is going to help fill the void where Parse left off.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">This isn’t going to be a full write up of Google I/O 2016. There are many that do a great job of that, you can read TechCrunch’s here, The Verge here, and The Next Web here.</summary></entry><entry><title type="html">Solving customer problems in payments</title><link href="http://localhost:4000/blog/2016/05/18/Solving-customer-problems-in-payments.html" rel="alternate" type="text/html" title="Solving customer problems in payments" /><published>2016-05-18T00:00:00-07:00</published><updated>2016-05-18T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/05/18/Solving%20customer%20problems%20in%20payments</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/18/Solving-customer-problems-in-payments.html">&lt;p&gt;An interesting announcement was made this week in the payments world. MCX is laying off 30 people and postponing their launch of the CurrentC mobile payment app. You can read about the announcement on &lt;a href=&quot;http://techcrunch.com/2016/05/16/mcx-postpones-national-rollout-of-apple-pay-rival-currentc-lays-off-30-to-focus-on-banks&quot;&gt;TechCrunch&lt;/a&gt;. &lt;a href=&quot;http://daringfireball.net/2016/05/translation_mcx&quot;&gt;John Gruber, on his site Daring Fireball&lt;/a&gt; does a comical, yet glaringly true translation of the comments made by the CEO of MCX. And &lt;a href=&quot;http://www.pymnts.com/news/mobile-payments/2016/mcx-currentc-mobile-wallet-postponed/&quot;&gt;PYMNTS.com&lt;/a&gt; has a write up about the story that brings up pressing questions to be answered in the mobile payments space:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If we’ve learned anything over the last several years when watching the mobile payments field take shape, it’s that absent something that solves a problem for a consumer or adds value to their experience, innovators have nothing left but an empty bank account to show for their efforts. And the longer that it takes for the value exchange to be recognized and that “ignition” to happen, the more likely it is that a superior offer comes along to take its place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This point is essential. The plastic cards have been solving the problems of consumers for years. The next wave of solutions needs to solve a new problem and really add value to users.&lt;/p&gt;

&lt;p&gt;This got me thinking about an &lt;a href=&quot;https://stratechery.com/2015/chase-pay-and-the-payments-stack-apple-pay-and-opportunity-cost-apply-aggregation-theory/&quot;&gt;article&lt;/a&gt; I read late last year echoing the same sentiment:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’ll jump straight to the punchline: Chase Pay will fail. Understanding why, though, is interesting, and the fact this exists at all should be worrying from an Apple perspective.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;First off, like most products produced by companies which don’t owe their existence or financial performance to the quality of the user experience, the product already sounds like a complete mess: you pay with QR codes from the Chase app, except for when you need QR codes from the MCX app, and hey, you can sometimes take a photo of your check and not use QR codes as well! It’s ridiculous, and as I’ve said about payments from the beginning, whatever product succeeds credit cards has to be significantly easier to use; inertia is a powerful thing, which means the delta of improvement in convenience in particular (plus security and usefulness and all the other factors that you can attribute to a product) has to be massive. And, given just how convenient credit cards are, a new payment solution has to basically have zero friction — and this Chase product sounds like it has a lot.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think these are all the right conversations to be having. Solving the needs of consumers has to be the focus in mobile payments and will be the catalyst to drive adoption.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">An interesting announcement was made this week in the payments world. MCX is laying off 30 people and postponing their launch of the CurrentC mobile payment app. You can read about the announcement on TechCrunch. John Gruber, on his site Daring Fireball does a comical, yet glaringly true translation of the comments made by the CEO of MCX. And PYMNTS.com has a write up about the story that brings up pressing questions to be answered in the mobile payments space:</summary></entry><entry><title type="html">Apple shortens app review times</title><link href="http://localhost:4000/blog/2016/05/14/Apple-shortens-app-review-times.html" rel="alternate" type="text/html" title="Apple shortens app review times" /><published>2016-05-14T00:00:00-07:00</published><updated>2016-05-14T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/05/14/Apple-shortens-app-review-times</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/14/Apple-shortens-app-review-times.html">&lt;p&gt;There was been much talk about Apple competing and generating revenue as a service based business. If you haven’t read the &lt;a href=&quot;https://stratechery.com/2016/apples-organizational-crossroads/&quot;&gt;Stratechery blog post&lt;/a&gt; on it, it’s a must read. Now there are reports that Apple is significantly cutting app review times.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.bloomberg.com/news/articles/2016-05-12/apple-shortens-app-review-times-in-push-to-boost-service-sales&quot;&gt;From Bloomberg :&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Apple Inc. has cut the approval time for new submissions to its App Store from more than a week to less than two days, part of a broader push to increase revenue from services including mobile applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a long awaited step in the right direction, however Apple still needs to focus on improving discoverability in the app store. Perhaps a purge of the massive volume of terrible apps in the store, especially the ones that haven’t been updated in years. Quality &amp;gt; Quantity&lt;/p&gt;

&lt;p&gt;Listen to Marco and Underscore talk about it on &lt;a href=&quot;https://overcast.fm/+Fgm1ElCi0&quot;&gt;Under the Radar: 27: Fast App Review.&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">There was been much talk about Apple competing and generating revenue as a service based business. If you haven’t read the Stratechery blog post on it, it’s a must read. Now there are reports that Apple is significantly cutting app review times.</summary></entry><entry><title type="html">Gboard</title><link href="http://localhost:4000/blog/2016/05/02/Gboard.html" rel="alternate" type="text/html" title="Gboard" /><published>2016-05-02T00:00:00-07:00</published><updated>2016-05-02T00:00:00-07:00</updated><id>http://localhost:4000/blog/2016/05/02/Gboard</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/02/Gboard.html">&lt;p&gt;Google has announced today it’s launching a keyboard for iOS called &lt;a href=&quot;https://googleblog.blogspot.com/2016/05/gboard-search-gifs-emojis-keyboard.html&quot;&gt;Gboard.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-ALxOB9Ab_9A/VzQuQB1vl5I/AAAAAAAASRo/0gE-Dij5TIEvUIY3zDcvQtivBEQ23VkuwCLcB/s1600/gboard_gif_regularSearch.gif&quot; alt=&quot;GBoard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From &lt;a href=&quot;http://techcrunch.com/2016/05/12/google-launches-gboard-an-ios-keyboard-that-lets-you-search-without-a-browser/&quot;&gt;TechCrunch:&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Of course, the most interesting feature of this keyboard is its direct integration with Google’s services.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;By tapping the included “G” icon, you’re able to immediately search Google without exiting your keyboard and launching a browser or the Google app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This allows you to easily search for things like flight times, news articles, restaurant and business listings, weather and more right from your keyboard, then just tap to paste that information into your chat. (You’ll need to give the app access to your location the first time you launch this feature.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m surprised this move did not come sooner, as Microsoft has already realized the power of integrating itself into the keyboard. The SwiftKey acquisition was a telling sign that this space is going to start to heat up.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">Google has announced today it’s launching a keyboard for iOS called Gboard.</summary></entry><entry><title type="html">The not so obvious problem for iOS developers</title><link href="http://localhost:4000/blog/2016/01/02/The-not-so-obvious-problem-for-iOS-developers.html" rel="alternate" type="text/html" title="The not so obvious problem for iOS developers" /><published>2016-01-02T00:00:00-08:00</published><updated>2016-01-02T00:00:00-08:00</updated><id>http://localhost:4000/blog/2016/01/02/The-not-so-obvious-problem-for-iOS-developers</id><content type="html" xml:base="http://localhost:4000/blog/2016/01/02/The-not-so-obvious-problem-for-iOS-developers.html">&lt;p&gt;Recently my new company provided me with an 16GB iPhone 6S. I did everything in my power to circumvent this model, as I was using a iPhone 6 with 64GB at a 70% capacity. Switching to the 16GB seemed unfathomable. Since two iPhones in my pocket was not going to be an option, I told myself I would make this work. First, I needed to make some ground rules or this was going to be a disaster.&lt;/p&gt;

&lt;p&gt;I started with creating a new phone and not installing my iCloud back up. I had 244 non-Apple apps on my phone and knew I needed to narrow this down. Only my most used apps were going to make the cut. This was a herculean challenge but a good exercise to think about what I was receiving the most value from. As of this writing I only downloaded 40 but I feel like I cut too many corners. One thing I had going for me is I don’t use any music on my phone since I use Spotify.&lt;/p&gt;

&lt;p&gt;The most glaring problem I have with this new set up is my new trepidation to try out new apps. Is this a problem other people think about? In the past I would try out apps on a whim and keep them around even if it’s a one time use case. Now my new world view is drastically different because of the limited space. This makes me uncomfortable since I ‘m a Product Manager in the mobile space. Testing a large number of apps is part of the job description.&lt;/p&gt;

&lt;p&gt;Now that I’ve given my personal account how this phone affects me. Let’s think about it in a broader context and what are the ripple effects for the ecosystem.&lt;/p&gt;

&lt;p&gt;So I’ve read all the reports about the amount of apps the average person uses per day &lt;a href=&quot;http://techcrunch.com/2015/06/22/consumers-spend-85-of-time-on-smartphones-in-apps-but-only-5-apps-see-heavy-use/#.vyo3cp:5bJy&quot;&gt;(5)&lt;/a&gt; and how many she will keep on her phone &lt;a href=&quot;http://mashable.com/2013/09/05/most-apps-download-countries/&quot;&gt;(25)&lt;/a&gt;, but that is just data. The important question is why are people limiting their app consumption. Is it a personal preference or a choice they’re forced to make? This distinction is important as the app ecosystem’s vibrancy of new apps depends on it.&lt;/p&gt;

&lt;p&gt;Let’s run with the idea that the vast majority of people own a 16GB iPhone. This is a safe assumption thanks to some data from the UK that says &lt;a href=&quot;http://www.businessinsider.com/iphone-storage-data-market-share-2014-12?r=UK&amp;amp;IR=T&quot;&gt;91% of Telefonica users have the 16GB model.&lt;/a&gt; Let’s make another assumption and say the majority of those people run into a shortage of space on a frequent basis. If this is the case, then the obvious statement is Apple is not giving the user the best experience. The less obvious statement. App developers are experiencing a constraint in growth outside of their control.&lt;/p&gt;

&lt;p&gt;Yes, Apple launched app thinning and reduced the size of OS updates. But that won’t solve the problem overnight. A simple thought experiment. If someone needed to choose between photos of their loved ones and the newest app. Which would they choose? The problem for app developers is, why do they have to?&lt;/p&gt;

&lt;p&gt;This is an important observation as we increasingly rely on software to make improvements in our lives. As a Product Manager, it is more important than ever to bring real value to your users. Your not only competing for the user’s time and attention. You are competing for space on their phone.&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">Recently my new company provided me with an 16GB iPhone 6S. I did everything in my power to circumvent this model, as I was using a iPhone 6 with 64GB at a 70% capacity. Switching to the 16GB seemed unfathomable. Since two iPhones in my pocket was not going to be an option, I told myself I would make this work. First, I needed to make some ground rules or this was going to be a disaster.</summary></entry><entry><title type="html">Going Mobile</title><link href="http://localhost:4000/blog/2015/09/18/Going-Mobile.html" rel="alternate" type="text/html" title="Going Mobile" /><published>2015-09-18T00:00:00-07:00</published><updated>2015-09-18T00:00:00-07:00</updated><id>http://localhost:4000/blog/2015/09/18/Going-Mobile</id><content type="html" xml:base="http://localhost:4000/blog/2015/09/18/Going-Mobile.html">&lt;p&gt;I started my programming journey almost a year ago and I’ve recently had a change in philosophy. I’ve decided to exclusively develop iOS apps using the new Swift language Apple debuted last year. This decision did not come lightly. Many conversations, read blog posts and internal pondering if this would be the right move took place before I came to the decision to invest my limited time in learning iOS development.&lt;/p&gt;

&lt;p&gt;After extensive thought on this subject, I’ve dove in head first to learn as fast as I possibly can. My knowledge of web apps and understanding of Object Oriented Programming Languages such as Ruby have been extremely useful in learning Swift concepts. Xcode and the entire development process of iOS is so different, but the more I learn the more my own personal experiences with apps is helping me further my understanding. This is truly an exciting time.&lt;/p&gt;

&lt;p&gt;So, why did I come to this conclusion? My wife originally planted the idea in my head when I first started to learn to code. It was a profound yet simple argument. The vast majority of the time she is on her phone, and the majority of that time is spent in apps, so why don’t you learn how to build these? I’m paraphrasing but when I think about it, it’s also the case for my own behavior. I spend the majority of my time in apps and I’m generally most excited about the possibility of what native apps have the capability of doing.&lt;/p&gt;

&lt;p&gt;At the time I shrugged this off because I was in the infancy of my coding journey and the majority of the resources I found were for the web and Ruby on Rails. Just to be clear, I 100% don’t regret starting with the web. It was essential to understand the fundamental layers of how web frameworks work and this has and will continue to be profound in my iOS development. However, the argument she made began to creep into my mind which became inescapable to my thoughts.&lt;/p&gt;

&lt;p&gt;Now, I could get all &lt;a href=&quot;www.ben-evans.com/&quot;&gt;Benedict Evan’s&lt;/a&gt; and quote statistical data on why mobile is taking over the world or as he explains it “The smartphone is the new sun,” but seriously if you haven’t read his work, you should. I’ll leave him to make the technical arguments to why mobile is the most important piece of hardware in the world and to the future.&lt;/p&gt;

&lt;p&gt;The decision became clear. To build solutions that solved my own problems I needed to develop software on the platform I spend the most time.&lt;/p&gt;

&lt;p&gt;As I was writing about my Ruby on Rails coding journey, I will begin to do that for Swift and iOS development. Writing technical blog posts is to help me better understand the concepts I’m learning and has been enormously helpful. It was the sole reason for taking the part-time work at Codecademy as an Advisor. The experience of helping people to fix a bug or point them on the right path is a blog post in itself and I’ve loved the experience so far. I’ll get to that another time. For now, expect to see this blog full of Swift and iOS development post.&lt;/p&gt;

&lt;p&gt;Happy Coding&lt;/p&gt;</content><author><name></name></author><category term="blog" /><summary type="html">I started my programming journey almost a year ago and I’ve recently had a change in philosophy. I’ve decided to exclusively develop iOS apps using the new Swift language Apple debuted last year. This decision did not come lightly. Many conversations, read blog posts and internal pondering if this would be the right move took place before I came to the decision to invest my limited time in learning iOS development.</summary></entry></feed>